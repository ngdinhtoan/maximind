{"version":3,"sources":["main.js","index.js"],"names":["GameStatus","GameDirection","GameResult","GameLevel","EASY","NORMAL","HARD","INSANE","Settings","gameLevel","gameSize","Maximind","init","board","GameController","start","newGame","end","game","status","setup","level","SettingsStorage","setSettings","all","readAll","this","cookie","document","s","split","parts","length","key","replace","value","getSetting","listCells","cellWidth","cellHeight","lastVal","Game","firstChild","removeChild","Math","floor","clientWidth","cols","clientHeight","rows","createGameBoard","setTimeout","startGame","i","innerText","getAttribute","createTime","Date","startPlay","startTime","endGame","isWin","finishTime","result","col","row","cells","Map","random","has","set","cell","createCell","appendChild","push","addEventListener","e","stopPropagation","onCellClick","target","createElement","style","width","height","lineHeight","fontSize","top","left","className","setAttribute","val","parseInt","checkResult","isFinish","direction","window","preventDefault","useStyles","makeStyles","app","position","navi","bottom","paddingBottom","SimpleBottomNavigation","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setValue","react_default","a","BottomNavigation","onChange","event","newValue","getElementById","showLabels","BottomNavigationAction","label","href","defaultTheme","createMuiTheme","palette","type","ReactDOM","render","Fragment","children","Box","ThemeProvider","theme","CssBaseline","id","querySelector"],"mappings":"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","file":"static/js/main.8e7cd1e3.chunk.js","sourcesContent":["const GameStatus = {\n    INIT: 'INIT',\n    INPROGRESS: 'INPROGRESS',\n    END: 'END'\n};\n\nconst GameDirection = {\n    VERTICAL: 'VERTICAL',\n    HORIZONTAL: 'HORIZONTAL',\n};\n\nconst GameResult = {\n    WIN: 'WIN',\n    LOST: 'LOST'\n};\n\nexport const GameLevel = {\n    EASY: 5,\n    NORMAL: 7,\n    HARD: 10,\n    INSANE: 15\n};\n\nconst GameSize = {\n    SMALL: [10, 5],\n    MEDIUM: [15, 7],\n    LARGE: [20, 10]\n};\n\nlet Settings = {\n    gameLevel: GameLevel.EASY,\n    gameSize: GameSize.SMALL\n};\n\nexport const Maximind = {\n\n    init: function (board) {\n        GameController.board = board;\n    },\n\n    start: function () {\n        GameController.newGame();\n    },\n\n    end: function () {\n        GameController.game.status = GameStatus.END;\n    },\n\n    setup: function (level) {\n        Settings.gameLevel = level;\n        SettingsStorage.setSettings('level', Settings.gameLevel);\n    }\n};\n\nlet SettingsStorage = {\n    all: null,\n    readAll: function () {\n        this.all = [];\n        var cookie = document.cookie;\n        for (var s in cookie.split(';')) {\n            var parts = s.split('=');\n            if (parts.length < 2) {\n                continue;\n            }\n            var key = parts[0].replace(/^\\s+|\\s+$/gm, '');\n            var value = parts[1].replace(/^\\s+|\\s+$/gm, '');\n            this.all[key] = value;\n        }\n    },\n    getSetting: function (key) {\n        if (this.all == null) {\n            this.readAll();\n        }\n        return this.all[key];\n    },\n    setSettings: function (key, value) {\n        if (this.all == null) {\n            this.readAll();\n        }\n        this.all[key] = value;\n        document.cookie = key + '=' + value + '; expires=Thu, 18 Dec 2100 12:00:00 UTC';;\n    }\n};\n\nlet GameController = {\n    board: null,\n    listCells: null,\n    cellWidth: 0,\n    cellHeight: 0,\n    game: null,\n    lastVal: 0,\n    newGame: function () {\n        this.game = new Game(this.board);\n\n        //reset\n        while (this.board.firstChild) {\n            this.board.removeChild(this.board.firstChild);\n        }\n\n        // calculate game grid\n        this.cellWidth = Math.floor(this.board.clientWidth / this.game.cols);\n        this.cellHeight = Math.floor((this.board.clientHeight - 56) / this.game.rows);\n\n        //initialize game board\n        this.lastVal = 0;\n        this.createGameBoard();\n\n        setTimeout(function () { GameController.startGame(); }, 10);\n    },\n\n    startGame: function () {\n        for (let i = 0; i < this.listCells.length; i++) {\n            this.listCells[i].innerText = this.listCells[i].getAttribute('val');\n        }\n        this.game.status = GameStatus.INIT;\n        this.createTime = new Date();\n    },\n\n    startPlay: function () {\n        for (let i = 0; i < this.listCells.length; i++) {\n            this.listCells[i].innerText = '';\n        }\n\n        //change status\n        this.game.status = GameStatus.INPROGRESS;\n        this.game.startTime = new Date();\n    },\n\n    endGame: function (isWin) {\n        this.game.status = GameStatus.END;\n        this.game.finishTime = new Date();\n        this.game.result = isWin ? GameResult.WIN : GameResult.LOST;\n    },\n\n    createGameBoard: function () {\n        this.listCells = [];\n        let cells = new Map();\n        let col, row;\n        for (let i = 0; i < this.game.level; i++) {\n            do {\n                col = Math.floor(Math.random() * this.game.cols);\n                row = Math.floor(Math.random() * this.game.rows);\n            } while (cells.has(col + '-' + row));\n\n            cells.set(col + '-' + row, 1);\n            let cell = this.createCell(i + 1, row, col);\n\n            this.board.appendChild(cell);\n            this.listCells.push(cell);\n\n            cell.addEventListener('click', function (e) {\n                if (GameController.game && GameController.game.status !== GameStatus.END) {\n                    e.stopPropagation();\n                }\n                GameController.onCellClick(e.target);\n            });\n        }\n    },\n\n    createCell: function (value, row, col) {\n        const cell = document.createElement('div');\n        cell.style.width = this.cellWidth - 2 + 'px';\n        cell.style.height = this.cellHeight - 2 + 'px';\n        cell.style.lineHeight = this.cellHeight + 'px';\n        cell.style.fontSize = this.cellHeight + 'px';\n        cell.style.top = row * this.cellHeight + 'px';\n        cell.style.left = col * this.cellWidth + 'px';\n\n        cell.className = 'game-cell';\n        cell.setAttribute('val', value);\n        cell.setAttribute('col', col);\n        cell.setAttribute('row', row);\n\n        return cell;\n    },\n\n    onCellClick: function (cell) {\n        if (this.game.status === GameStatus.INIT) {\n            this.startPlay();\n        }\n        if (this.game.status !== GameStatus.INPROGRESS) {\n            return;\n        }\n        var val = parseInt(cell.getAttribute('val'));\n        var ok = this.checkResult(val);\n        if (!ok) {\n            //highlight wrong cell\n            cell.innerText = val;\n            cell.className = 'game-cell wrong';\n            // stop game\n            this.endGame(false);\n            return;\n        }\n        this.lastVal = val;\n        this.board.removeChild(cell);\n        if (this.isFinish()) {\n            this.endGame(true);\n        }\n    },\n    isFinish: function () {\n        return this.lastVal === this.game.level;\n    },\n    checkResult: function (val) {\n        return 1 === val - this.lastVal;\n    }\n};\n\nlet Game = function (board) {\n    this.level = Settings.gameLevel;\n    this.status = GameStatus.INIT;\n    this.createTime = null;\n    this.startTime = null;\n    this.finishTime = null;\n    this.result = null;\n    this.direction = GameDirection.HORIZONTAL;\n\n    if (board.clientWidth > board.clientHeight) {\n        this.cols = Settings.gameSize[0];\n        this.rows = Settings.gameSize[1];\n        this.direction = GameDirection.VERTICAL;\n    } else {\n        this.cols = Settings.gameSize[1];\n        this.rows = Settings.gameSize[0];\n    }\n};\n\nwindow.addEventListener('click', function (e) {\n    if (GameController.game != null && GameController.game.status === GameStatus.END) {\n        GameController.newGame();\n        e.preventDefault();\n    }\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {ThemeProvider} from '@material-ui/styles';\n\nimport {GameLevel, Maximind} from './main';\n\nconst useStyles = makeStyles({\n    app: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed'\n    },\n    navi: {\n        height: '56px',\n        width: '100%',\n        position: 'absolute',\n        bottom: 0\n    },\n    board: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed',\n        paddingBottom: '56px',\n    }\n});\n\nfunction SimpleBottomNavigation() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n                Maximind.setup(newValue);\n                Maximind.init(document.getElementById('game-board'));\n                Maximind.start();\n            }}\n            showLabels\n            className={classes.navi}\n        >\n            <BottomNavigationAction label=\"EASY\" value={GameLevel.EASY} href=\"\"/>\n            <BottomNavigationAction label=\"NORMAL\" value={GameLevel.NORMAL} href=\"\"/>\n            <BottomNavigationAction label=\"HARD\" value={GameLevel.HARD} href=\"\"/>\n        </BottomNavigation>\n    );\n}\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment children={Box}>\n            <ThemeProvider theme={defaultTheme}>\n                <CssBaseline/>\n                <div className={classes.app}>\n                    <div id=\"game-board\" className={classes.board}/>\n                    <SimpleBottomNavigation/>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n\nReactDOM.render(<App/>, document.querySelector('#app'));\n"],"sourceRoot":""}