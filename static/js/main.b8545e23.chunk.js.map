{"version":3,"sources":["main.js","index.js"],"names":["GameStatus","GameDirection","GameResult","GameLevel","EASY","NORMAL","HARD","INSANE","Settings","gameLevel","gameSize","Maximind","init","board","GameController","start","newGame","end","game","status","setup","level","SettingsStorage","setSettings","all","readAll","this","cookie","document","s","split","parts","length","key","replace","value","getSetting","console","log","listCells","cellWidth","cellHeight","lastVal","Game","firstChild","removeChild","direction","Math","floor","clientHeight","rows","clientWidth","cols","createGameBoard","setTimeout","startGame","i","innerText","getAttribute","createTime","Date","startPlay","startTime","endGame","isWin","finishTime","result","col","row","cells","random","indexOf","push","cell","createCell","appendChild","createElement","style","width","height","lineHeight","fontSize","transformOrigin","top","left","className","setAttribute","addEventListener","e","stopPropagation","onCellClick","target","val","parseInt","checkResult","isFinish","window","innerWidth","innerHeight","preventDefault","useStyles","makeStyles","app","position","navi","bottom","paddingBottom","SimpleBottomNavigation","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setValue","react_default","a","BottomNavigation","onChange","event","newValue","getElementById","showLabels","BottomNavigationAction","label","href","defaultTheme","createMuiTheme","palette","type","ReactDOM","render","Fragment","children","Box","ThemeProvider","theme","CssBaseline","id","querySelector"],"mappings":"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","file":"static/js/main.b8545e23.chunk.js","sourcesContent":["const GameStatus = {\n    INIT: 'INIT',\n    INPROGRESS: 'INPROGRESS',\n    END: 'END'\n};\n\nconst GameDirection = {\n    VERTICAL: 'VERTICAL',\n    HORIZONTAL: 'HORIZONTAL',\n};\n\nconst GameResult = {\n    WIN: 'WIN',\n    LOST: 'LOST'\n};\n\nexport const GameLevel = {\n    EASY: 5,\n    NORMAL: 7,\n    HARD: 10,\n    INSANE: 15\n};\n\nconst GameSize = {\n    SMALL: [10, 5],\n    MEDIUM: [15, 7],\n    LARGE: [20, 10]\n};\n\nlet Settings = {\n    gameLevel: GameLevel.EASY,\n    gameSize: GameSize.SMALL\n};\n\nexport const Maximind = {\n\n    init: function (board) {\n        GameController.board = board;\n    },\n\n    start: function () {\n        GameController.newGame();\n    },\n\n    end: function () {\n        GameController.game.status = GameStatus.END;\n    },\n\n    setup: function (level) {\n        Settings.gameLevel = level;\n        SettingsStorage.setSettings('level', Settings.gameLevel);\n    }\n};\n\nlet SettingsStorage = {\n    all: null,\n    readAll: function () {\n        this.all = [];\n        var cookie = document.cookie;\n        for (var s in cookie.split(';')) {\n            var parts = s.split('=');\n            if (parts.length < 2) {\n                continue;\n            }\n            var key = parts[0].replace(/^\\s+|\\s+$/gm, '');\n            var value = parts[1].replace(/^\\s+|\\s+$/gm, '');\n            this.all[key] = value;\n        }\n    },\n    getSetting: function (key) {\n        if (this.all == null) {\n            this.readAll();\n        }\n        return this.all[key];\n    },\n    setSettings: function (key, value) {\n        if (this.all == null) {\n            this.readAll();\n        }\n        this.all[key] = value;\n        var s = key + '=' + value + '; expires=Thu, 18 Dec 2100 12:00:00 UTC';\n        console.log(s);\n        document.cookie = s;\n    }\n};\n\nlet GameController = {\n    board: null,\n    listCells: null,\n    cellWidth: 0,\n    cellHeight: 0,\n    game: null,\n    lastVal: 0,\n    newGame: function () {\n        this.game = new Game();\n\n        //reset\n        while (this.board.firstChild) {\n            this.board.removeChild(this.board.firstChild);\n        }\n\n        // calculate game grid\n        if (this.game.direction === GameDirection.VERTICAL) {\n            this.cellWidth = Math.floor((this.board.clientHeight - 56) / this.game.rows);\n            this.cellHeight = Math.floor(this.board.clientWidth / this.game.cols);\n        } else {\n            this.cellWidth = Math.floor(this.board.clientWidth / this.game.cols);\n            this.cellHeight = Math.floor((this.board.clientHeight - 56) / this.game.rows);\n        }\n\n        //initialize game board\n        this.lastVal = 0;\n        this.createGameBoard();\n\n        setTimeout(function () {\n            GameController.startGame();\n        }, 500);\n    },\n\n    startGame: function () {\n        for (var i = 0; i < this.listCells.length; i++) {\n            this.listCells[i].innerText = this.listCells[i].getAttribute('val');\n        }\n        this.game.status = GameStatus.INIT;\n        this.createTime = new Date();\n    },\n\n    startPlay: function () {\n        //hide cell value\n        console.log(this.listCells.length);\n        for (var i = 0; i < this.listCells.length; i++) {\n            this.listCells[i].innerText = '';\n        }\n\n        //change status\n        this.game.status = GameStatus.INPROGRESS;\n        this.game.startTime = new Date();\n    },\n\n    endGame: function (isWin) {\n        this.game.status = GameStatus.END;\n        this.game.finishTime = new Date();\n        this.game.result = isWin ? GameResult.WIN : GameResult.LOST;\n    },\n\n    createGameBoard: function () {\n        this.listCells = [];\n        let cells = [];\n        let col, row;\n        for (let i = 0; i < this.game.level; i++) {\n            do {\n                col = Math.floor(Math.random() * this.game.cols);\n                row = Math.floor(Math.random() * this.game.rows);\n            } while (cells.indexOf(col + '-' + row) >= 0);\n\n            cells.push(col + '-' + row);\n            let cell = this.createCell(i + 1, row, col);\n\n            this.board.appendChild(cell);\n            this.listCells.push(cell);\n        }\n    },\n\n    createCell: function (value, row, col) {\n        const cell = document.createElement('div');\n        cell.style.width = this.cellWidth - 2 + 'px';\n        cell.style.height = this.cellHeight - 2 + 'px';\n        cell.style.lineHeight = this.cellHeight + 'px';\n        cell.style.fontSize = this.cellHeight + 'px';\n        if (this.game.direction === GameDirection.VERTICAL) {\n            cell.style.transformOrigin = \"0 0\";\n            // cell.style.transform = \"rotate(90deg)\";\n            cell.style.top = row * this.cellWidth + 'px';\n            cell.style.left = this.board.clientWidth - col * this.cellHeight + 'px';\n        } else {\n            cell.style.top = row * this.cellHeight + 'px';\n            cell.style.left = col * this.cellWidth + 'px';\n        }\n        cell.className = 'game-cell';\n        cell.setAttribute('val', value);\n        cell.setAttribute('col', col);\n        cell.setAttribute('row', row);\n        cell.addEventListener('click', function (e) {\n            if (GameController.game && GameController.game.status !== GameStatus.END) {\n                e.stopPropagation();\n            }\n            GameController.onCellClick(e.target);\n        });\n        return cell;\n    },\n    onCellClick: function (cell) {\n        if (this.game.status === GameStatus.INIT) {\n            this.startPlay();\n        }\n        if (this.game.status !== GameStatus.INPROGRESS) {\n            return;\n        }\n        var val = parseInt(cell.getAttribute('val'));\n        var ok = this.checkResult(val);\n        if (!ok) {\n            //highlight wrong cell\n            cell.innerText = val;\n            cell.className = 'game-cell wrong';\n            // stop game\n            this.endGame(false);\n            return;\n        }\n        this.lastVal = val;\n        this.board.removeChild(cell);\n        if (this.isFinish()) {\n            this.endGame(true);\n        }\n    },\n    isFinish: function () {\n        return this.lastVal === this.game.level;\n    },\n    checkResult: function (val) {\n        return 1 === val - this.lastVal;\n    }\n};\n\nlet Game = function () {\n    this.level = Settings.gameLevel;\n    this.status = GameStatus.INIT;\n    this.createTime = null;\n    this.startTime = null;\n    this.finishTime = null;\n    this.result = null;\n    this.direction = GameDirection.HORIZONTAL;\n\n    if (window.innerWidth > window.innerHeight) {\n        this.cols = Settings.gameSize[0];\n        this.rows = Settings.gameSize[1];\n        this.direction = GameDirection.VERTICAL;\n    } else {\n        this.cols = Settings.gameSize[1];\n        this.rows = Settings.gameSize[0];\n    }\n};\n\nwindow.addEventListener('click', function (e) {\n    if (GameController.game != null && GameController.game.status === GameStatus.END) {\n        GameController.newGame();\n        e.preventDefault();\n    }\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {ThemeProvider} from '@material-ui/styles';\n\nimport {GameLevel, Maximind} from './main';\n\nconst useStyles = makeStyles({\n    app: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed'\n    },\n    navi: {\n        height: '56px',\n        width: '100%',\n        position: 'absolute',\n        bottom: 0\n    },\n    board: {\n        height: '100%',\n        width: '100%',\n        position: 'fixed',\n        paddingBottom: '56px',\n    }\n});\n\nfunction SimpleBottomNavigation() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n                Maximind.setup(newValue);\n                Maximind.init(document.getElementById('game-board'));\n                Maximind.start();\n            }}\n            showLabels\n            className={classes.navi}\n        >\n            <BottomNavigationAction label=\"EASY\" value={GameLevel.EASY} href=\"\"/>\n            <BottomNavigationAction label=\"NORMAL\" value={GameLevel.NORMAL} href=\"\"/>\n            <BottomNavigationAction label=\"HARD\" value={GameLevel.HARD} href=\"\"/>\n        </BottomNavigation>\n    );\n}\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment children={Box}>\n            <ThemeProvider theme={defaultTheme}>\n                <CssBaseline/>\n                <div className={classes.app}>\n                    <div id=\"game-board\" className={classes.board}/>\n                    <SimpleBottomNavigation/>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n\nReactDOM.render(<App/>, document.querySelector('#app'));\n"],"sourceRoot":""}